A = {}
Monthly_earnings=raw_input
Weekly_expenses=raw_input
start= raw_input
#B is later used in function "add"
#declare a dictionary so we can store key/value pairs
#store a pair for each question set.
#Code used from other people, already kept.
a = {}
s=(raw_input)
w=(raw_input)
p=(raw_input)
print('Type help() to learn how I can help you')
def help():
    print 'Hello I am Jennifer. As your personal helper I can help you run your finances, make a schedule, or general chatter. If you would like help with finance help help2(\'finance\') if you would like help with making a schedule type help2(\'schedule\') or if you would like general talk type help2(\'chatter\')' 


def help2(raw_input):    
    if 'schedule' in raw_input:
        makeSchedule() 
    if 'finance' in raw_input:
        gatherExpense_Costs()
    if 'chatter' in raw_input:
        chatter('How are you today?')

def makeSchedule():
    global s
    global w
    global p
    s=raw_input('What time do you have school?')
    w=raw_input('What time do you have work?')
    p=raw_input('What time do you have practice?')
    print('Thank you, your schedule has been saved')
    print('If you would like to see your schedule type schedule(\'What is my schedule today?\') If you would like to change any of the times that you entered, type changeSchedule_Work(\'The time you would like to change to\')If you would like to change school or practice times type school or pracitce after the underscore.') 
           
def schedule(raw_input):
    global s
    global w
    global p
    create = 'make' or 'schedule' or 'I' or 'Like'
    if create in (raw_input):
        makeSchedule()
    routine = 'schedule' or 'today' or 'what' 'is'
    if routine in (raw_input):
        print('You have school at', s)
        print('You have work at', w)
        print('You have practice at',p)
    
def changeSchedule_School(school):
    global a
    global s
    s = school
    a['school'] = 'your time for school has been changed to ' + s
    
def changeSchedule_Work(work):
    global a
    global w
    w = work
    a['work'] = 'your time for work has been changed to ' + w
    
def changeSchedule_Practice(practice):
    global a
    global p
    p = practice
    a['practice'] = 'your time for practice has been changed to ' + p
#use global dictionary "a" to store a schedule with a
#corresponding period
def addSchedule1(schedule, period):
    global a
#Each key can be specified, through str('x')
#Each key is different, and anything can be kept through it
#Each period can be different.
    a['sched' + period] = schedule
#retrieve a schedule back based on the period
def schedule1(period):
    global a
    routine = 'sched' + period
    for key,value in a.items():
        #print key + " => " + value
        if routine == (key):
            print 'schedule: ' + value

#change the schedule for the period using the dynamic key
def changeSchedule1(newSchedule, period):
    global a
    routine = 'sched' + period
    a[routine] = newSchedule
    
   
def changeBills(newFees):
#Change the weekly expenses to what you'd like or need
    global A
    global Weekly_expenses
    Weekly_expenses = newFees
    A['fees'] = ('your fees are now',float(Weekly_expenses))    

def gatherExpense_Costs():
    global Monthly_earnings
    global Weekly_expenses
    global start
    Monthly_earnings=float(raw_input('How much do you make a month?'))
    Weekly_expenses=float(raw_input('How much do you spend a week?'))
    start=float(raw_input('How much money do you currently have?'))
    


def weeklyExpenses():  
#This function will take away money if called upon right away and will spit out result
#The expense comes from user input at beginning of running.
    global start      
    global bills
    global month
    global Weekly_expenses
    start = start - float(Weekly_expenses)
    print 'You now have','$',start    
    
def fixedIncome(raw_input):
    global Weekly_expenses
    global A
    global Monthly_earnings
    fees = 'weekly' and 'expenses'
    income = 'monthly' and 'income'
    if fees in (raw_input):
#This will spit out fees if the words weekly and expenses are within input
        print 'Your fees are $',float(Weekly_expenses), 'per week.'
    elif income in (raw_input):
#This will spit out your income if words 'monthly' and 'income' are within input
        print 'Your income is $',float(Monthly_earnings), 'per month.'
        
def add():
    global start
    global month
    global A
    global Monthly_earnings
    
    print '$', start
    A['bank'] = float(Monthly_earnings)
#The code below adds the amount of money that you earn from the key of 'bank', from the user
#to start. Start fluctuates throughout code, but it will show you how much you have at end.
    start = start + A['bank']
    print 'You now have','$',start  
    
def spend(b):
    global start
    start = start - float(b)
    print '$', start
    
def CurrentMoney():
    global start
    print '$', start
    
def cash():
    global start
    start = start +25
    print '$', float(start)
    
def chatter(raw_input):
    talk = 'how' and 'are' and 'today'
    if talk in (raw_input):
        print('I am fabulous, thanks for asking')
    bad = 'sad' or 'unhappy' or 'am' or 'I' 
    if bad in (raw_input):
        print('Aww, there, there')
    good = 'happy' or 'well' or 'fine' or 'good' or 'Am' or 'I'
    if good in (raw_input):
        print('Glad to hear it')
